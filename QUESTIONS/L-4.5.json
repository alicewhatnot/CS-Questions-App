[
  {
    "question": "Explain what is meant by a natural number and describe how natural numbers are used in computing applications.",
    "marks": 2,
    "mark_scheme": ["Definition of natural number as a non-negative integer", "Use in counting discrete items", "Examples such as array indexing, counting loop iterations"],
    "topic": "fundamentals of data representation",
    "subtopic": "number systems",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Discuss the difference between rational and irrational numbers, giving examples of each, and explain why irrational numbers are more challenging to represent in computing.",
    "marks": 4,
    "mark_scheme": ["Rational numbers can be expressed as ratio of integers", "Irrational cannot be expressed as ratio (e.g. π, √2)", "Computers approximate irrationals with floating point", "Limitations include rounding errors and loss of precision"],
    "topic": "fundamentals of data representation",
    "subtopic": "number systems",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Describe the difference between integer and real numbers. Give an example of when each would be the appropriate data type in a computer program.",
    "marks": 3,
    "mark_scheme": ["Integer = whole numbers, no fractional part", "Real = includes fractional part", "Example: integer for counting items, real for measurement (temperature)"],
    "topic": "fundamentals of data representation",
    "subtopic": "number systems",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Explain the importance of ordinal numbers in computing, with an example of how they differ from natural numbers.",
    "marks": 3,
    "mark_scheme": ["Ordinal numbers describe position/order", "Example: 'first', 'second'", "Difference from natural: ordinals indicate sequence not just quantity", "Used in ranking, arrays, or hierarchical structures"],
    "topic": "fundamentals of data representation",
    "subtopic": "number systems",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Convert the decimal number 45 into binary and hexadecimal. Show your working.",
    "marks": 2,
    "mark_scheme": ["Binary: 101101", "Hexadecimal: 2D", "Working method such as successive division by 2 and 16"],
    "topic": "fundamentals of data representation",
    "subtopic": "number bases",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Explain what is meant by a bit and a byte. State how many different values a single byte can represent and explain why.",
    "marks": 2,
    "mark_scheme": ["Bit = single binary digit (0 or 1)", "Byte = 8 bits", "Represents 2^8 = 256 values"],
    "topic": "fundamentals of data representation",
    "subtopic": "units of information",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Show how to add the binary numbers 101101 and 1101. Give the result in binary and decimal.",
    "marks": 3,
    "mark_scheme": ["Correct column addition method", "Result: 111010", "Decimal equivalent: 58"],
    "topic": "fundamentals of data representation",
    "subtopic": "binary number system",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Explain how negative numbers are represented using two’s complement with an 8-bit word. Illustrate your answer by showing how -37 would be represented.",
    "marks": 4,
    "mark_scheme": ["Two’s complement method: invert bits and add 1", "37 in binary: 00100101", "Invert: 11011010", "Add 1: 11011011 = -37"],
    "topic": "fundamentals of data representation",
    "subtopic": "binary number system",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Discuss the causes of rounding errors in floating point representation. Give an example of how this could affect calculations in real-world computing.",
    "marks": 4,
    "mark_scheme": ["Caused by limited precision", "Some decimal values cannot be exactly represented in binary", "E.g. 0.1 recurring", "Example: financial calculation leading to incorrect totals"],
    "topic": "fundamentals of data representation",
    "subtopic": "binary number system",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Explain the difference between absolute error and relative error in numerical computation. Provide an example of each.",
    "marks": 3,
    "mark_scheme": ["Absolute error = difference between measured and true value", "Relative error = absolute error divided by true value", "Examples with numbers to illustrate"],
    "topic": "fundamentals of data representation",
    "subtopic": "binary number system",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Explain how normalisation of floating-point numbers helps maximise precision. Give an example.",
    "marks": 3,
    "mark_scheme": ["Normalisation shifts radix point", "Ensures leading digit non-zero", "Example: 0.00101 × 2^4 becomes 1.01 × 2^1", "Maximises precision in mantissa"],
    "topic": "fundamentals of data representation",
    "subtopic": "binary number system",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Describe the consequences of overflow and underflow errors in binary arithmetic. Provide examples.",
    "marks": 3,
    "mark_scheme": ["Overflow = result too large for representation", "Underflow = result too small to represent accurately", "Examples: 8-bit overflow at 256, underflow in floating point near zero"],
    "topic": "fundamentals of data representation",
    "subtopic": "binary number system",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Compare ASCII and Unicode as character coding systems. Explain why Unicode is necessary.",
    "marks": 4,
    "mark_scheme": ["ASCII uses 7/8 bits, 128/256 characters", "Unicode supports many languages, emojis", "Unicode uses more bits per character (UTF-8/16/32)", "ASCII insufficient for internationalisation"],
    "topic": "fundamentals of data representation",
    "subtopic": "information coding systems",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Explain parity bits as a form of error checking. Discuss one limitation of this method.",
    "marks": 2,
    "mark_scheme": ["Parity adds an extra bit to make total even or odd", "Detects single-bit errors", "Limitation: cannot detect double-bit errors"],
    "topic": "fundamentals of data representation",
    "subtopic": "information coding systems",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Describe how an analogue-to-digital converter (ADC) works, and explain how sampling rate affects sound quality.",
    "marks": 4,
    "mark_scheme": ["ADC measures amplitude at intervals", "Samples converted into binary values", "Higher sampling rate = more accurate representation", "Nyquist theorem: must sample at least twice highest frequency"],
    "topic": "fundamentals of data representation",
    "subtopic": "representing images, sound and other data",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Compare vector graphics and bitmapped graphics, giving advantages and disadvantages of each.",
    "marks": 4,
    "mark_scheme": ["Bitmap stores pixels individually", "Vector stores shapes/objects mathematically", "Bitmap allows detail and realism, but large files and scaling issues", "Vector scalable without loss, smaller file size, less realistic for photos"],
    "topic": "fundamentals of data representation",
    "subtopic": "representing images, sound and other data",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Explain the concepts of lossy and lossless data compression. Provide an example of each and state when they are appropriate.",
    "marks": 4,
    "mark_scheme": ["Lossy removes data permanently, smaller size (e.g. JPEG, MP3)", "Lossless retains all data (e.g. ZIP, PNG)", "Lossy for multimedia where exact reproduction unnecessary", "Lossless for text, executables"],
    "topic": "fundamentals of data representation",
    "subtopic": "representing images, sound and other data",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "Describe how the Caesar cipher works and explain why it is insecure. Contrast this with the Vernam cipher.",
    "marks": 5,
    "mark_scheme": ["Caesar cipher shifts letters by fixed amount", "Easily broken by brute force", "Vernam cipher uses one-time pad", "Perfect security if pad is random and used once", "Contrast: Caesar predictable, Vernam provably secure"],
    "topic": "fundamentals of data representation",
    "subtopic": "representing images, sound and other data",
    "question_type": "longform",
    "wrong_choices": null
  },
  {
    "question": "A digital sound file uses a sample rate of 44.1 kHz and 16-bit resolution with two channels (stereo). Calculate the approximate file size in MB for 1 minute of audio, and explain each step.",
    "marks": 8,
    "mark_scheme": ["Calculate samples per second per channel = 44,100", "Bits per sample = 16", "Channels = 2", "Total bits per second = 44,100 × 16 × 2", "Convert to bytes by dividing by 8", "Multiply by 60 for one minute", "Convert to MB by dividing by 1,048,576", "Final size ≈ 10 MB"],
    "topic": "fundamentals of data representation",
    "subtopic": "representing images, sound and other data",
    "question_type": "longform",
    "wrong_choices": null
  }
]
